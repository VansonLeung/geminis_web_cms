@model WebApplication2.Models.Infrastructure.Category

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Category</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.parentItemID, "parentItemID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("parentItemID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.parentItemID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name_en, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name_en, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name_en, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name_zh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name_zh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name_zh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name_cn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name_cn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name_cn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.iconPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="file-input" name="icon" />
                <input type="checkbox" name="iconPath" value="____EMPTY" class="" />&nbsp;<label for="iconPath" class="control-label">Remove icon upon submit</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.thumbPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="file-input" name="thumb" />
                <input type="checkbox" name="thumbPath" value="____EMPTY" class="" />&nbsp;<label for="thumbPath" class="control-label">Remove thumb upon submit</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="file-input" name="image" />
                <input type="checkbox" name="imagePath" value="____EMPTY" class="" />&nbsp;<label for="imagePath" class="control-label">Remove image upon submit</label>
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.isEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isEnabled)
                    @Html.ValidationMessageFor(model => model.isEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.isContentPage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isContentPage)
                    @Html.ValidationMessageFor(model => model.isContentPage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isArticleList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isArticleList)
                    @Html.ValidationMessageFor(model => model.isArticleList, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isUseNewsArticleDetailsTemplate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isUseNewsArticleDetailsTemplate)
                    @Html.ValidationMessageFor(model => model.isUseNewsArticleDetailsTemplate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.isVisibleToVisitorOnly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isVisibleToVisitorOnly)
                    @Html.ValidationMessageFor(model => model.isVisibleToVisitorOnly, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isVisibleToMembersOnly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isVisibleToMembersOnly)
                    @Html.ValidationMessageFor(model => model.isVisibleToMembersOnly, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isVisibleToTradingOnly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isVisibleToTradingOnly)
                    @Html.ValidationMessageFor(model => model.isVisibleToTradingOnly, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.isHeaderMenu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isHeaderMenu)
                    @Html.ValidationMessageFor(model => model.isHeaderMenu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isHeaderMenuRight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isHeaderMenuRight)
                    @Html.ValidationMessageFor(model => model.isHeaderMenuRight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isFooterMenu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isFooterMenu)
                    @Html.ValidationMessageFor(model => model.isFooterMenu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isShortcut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isShortcut)
                    @Html.ValidationMessageFor(model => model.isShortcut, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isJumbotron, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isJumbotron)
                    @Html.ValidationMessageFor(model => model.isJumbotron, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isBanner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isBanner)
                    @Html.ValidationMessageFor(model => model.isBanner, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.pageShouldHideTopTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.pageShouldHideTopTitle)
                    @Html.ValidationMessageFor(model => model.pageShouldHideTopTitle, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pageShouldShowTopbarmenu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.pageShouldShowTopbarmenu)
                    @Html.ValidationMessageFor(model => model.pageShouldShowTopbarmenu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.pageClassName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pageClassName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pageClassName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to Categories", "List")
</div>